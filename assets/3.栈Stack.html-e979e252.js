import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as e,f as t}from"./app-b8d2a4ee.js";const r={},c=t('<h1 id="c-栈stack" tabindex="-1"><a class="header-anchor" href="#c-栈stack" aria-hidden="true">#</a> c.栈Stack</h1><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识" aria-hidden="true">#</a> 基础知识：</h2><ul><li>栈是一种特殊的线性表，他只对栈顶进行添加和删除元素。栈有入栈和出栈两种操作。</li></ul><figure><img src="https://daimakuai.oss-cn-beijing.aliyuncs.com/img/image-20231106191755343.png" alt="入栈和出栈模式图" tabindex="0" loading="lazy"><figcaption>入栈和出栈模式图</figcaption></figure><h3 id="栈是什么" tabindex="-1"><a class="header-anchor" href="#栈是什么" aria-hidden="true">#</a> 栈是什么</h3><figure><img src="https://daimakuai.oss-cn-beijing.aliyuncs.com/img/image-20231106191845734.png" alt="栈是什么？" tabindex="0" loading="lazy"><figcaption>栈是什么？</figcaption></figure><h2 id="栈的相关操作" tabindex="-1"><a class="header-anchor" href="#栈的相关操作" aria-hidden="true">#</a> 栈的相关操作</h2><p>入栈addLast()+出栈removeLast（）</p><p>Push：压栈操作和入栈操作</p><p>Pop:弹栈操作和出栈操作</p><p>Peek：查看栈顶数据，但是不出栈</p><h2 id="架构设计一个通用栈-考虑封装思想" tabindex="-1"><a class="header-anchor" href="#架构设计一个通用栈-考虑封装思想" aria-hidden="true">#</a> 架构设计一个通用栈，考虑封装思想</h2><h3 id="判断条件" tabindex="-1"><a class="header-anchor" href="#判断条件" aria-hidden="true">#</a> 判断条件</h3><ul><li>初容大于零</li><li>满了不能加</li><li>空了不能取</li></ul><h3 id="istackdesc栈接口" tabindex="-1"><a class="header-anchor" href="#istackdesc栈接口" aria-hidden="true">#</a> IStackDesc栈接口</h3><h3 id="mystack" tabindex="-1"><a class="header-anchor" href="#mystack" aria-hidden="true">#</a> MyStack</h3><h3 id="对象游离-loitering" tabindex="-1"><a class="header-anchor" href="#对象游离-loitering" aria-hidden="true">#</a> 对象游离（loitering）</h3><p>定义：即在栈的实现中有对象的应用，而我们并没有真正的使用他，所以当减少N时，在数组中仍然有我们已经出栈的对象的指针</p><p>尽管我们知道我们不会再使用它了，但是Java系统不知道</p><p>解决方案：最好在去除元素对应的项设为null，这样就不会剩下。</p><figure><img src="https://daimakuai.oss-cn-beijing.aliyuncs.com/img/image-20231106192921970.png" alt="对象游离解决方案" tabindex="0" loading="lazy"><figcaption>对象游离解决方案</figcaption></figure>',21),n=[c];function d(h,s){return i(),e("div",null,n)}const g=a(r,[["render",d],["__file","3.栈Stack.html.vue"]]);export{g as default};
